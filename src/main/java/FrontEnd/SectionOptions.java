/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package FrontEnd;

import BoardPackage.Board;
import CardsPackage.GroupCards;
import GamePackage.Game;
import SectionsPackage.BasicService;
import SectionsPackage.Jail;
import SectionsPackage.Neutro;
import SectionsPackage.Place;
import SectionsPackage.Property;
import SectionsPackage.Section;
import SectionsPackage.Start;
import SectionsPackage.Station;
import SectionsPackage.TakeOne;
import SectionsPackage.Trap;
import java.awt.Component;
import java.awt.Container;
import javax.swing.JOptionPane;

/**
 *
 * @author user-ubunto
 */
public class SectionOptions extends javax.swing.JFrame {
    private Board board;
    private int rowPosition;
    private int columnPosition;
    private Section[][] sectionsCreate;
    private GroupCards[] groupCards;
    private CreateBoardFrame createboard;
    private Game game;
    
    /**
     * Creates new form SectionOptions
     * @param coordinates
     * @param board
     * @param createboard
     */
    public SectionOptions(String coordinates, Board board, CreateBoardFrame createboard,Game game) {
        initComponents();   
        enableComponents(this.PanelProperty,false);
        enableComponents(this.PanelTrap,false);
        enableComponents(this.PanelTakeOne,false);
        this.game = game;
        this.board = board;
        String[] separateCoordinates = coordinates.split(",", 2);
        this.rowPosition = Integer.parseInt(separateCoordinates[0]);
        this.columnPosition = Integer.parseInt(separateCoordinates[1]);
        sectionsCreate = this.board.getSectionsBoard();
        this.groupCards = this.board.getGroupsCards();
        showGroupsProperty();
        showGroupsOfCards();
        showSectionChange();
        this.createboard = createboard;
        showSectionCreated(sectionsCreate[this.rowPosition][this.columnPosition]);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        ComboBoxTypeSection = new javax.swing.JComboBox<>();
        PanelProperty = new javax.swing.JPanel();
        jLabel3 = new javax.swing.JLabel();
        TextFieldName = new javax.swing.JTextField();
        TextFieldPrice = new javax.swing.JTextField();
        jLabel4 = new javax.swing.JLabel();
        PanelPlace = new javax.swing.JPanel();
        jLabel2 = new javax.swing.JLabel();
        ComboBoxGroupProperty = new javax.swing.JComboBox<>();
        jLabel6 = new javax.swing.JLabel();
        TextFieldStayCost = new javax.swing.JTextField();
        jLabel7 = new javax.swing.JLabel();
        TextFieldStayCostHouse = new javax.swing.JTextField();
        jLabel8 = new javax.swing.JLabel();
        TextFieldStayCostHotel = new javax.swing.JTextField();
        jLabel9 = new javax.swing.JLabel();
        TextFieldPriceHouse = new javax.swing.JTextField();
        jLabel10 = new javax.swing.JLabel();
        TextFieldPriceHotel = new javax.swing.JTextField();
        ComboBoxTypeProperty = new javax.swing.JComboBox<>();
        jLabel5 = new javax.swing.JLabel();
        PanelServiceStation = new javax.swing.JPanel();
        jLabel11 = new javax.swing.JLabel();
        TextFieldCost = new javax.swing.JTextField();
        jButton1 = new javax.swing.JButton();
        ButtonConfirm = new javax.swing.JButton();
        PanelTrap = new javax.swing.JPanel();
        jLabel12 = new javax.swing.JLabel();
        ComboBoxTypeTramp = new javax.swing.JComboBox<>();
        PanelTrapTurns = new javax.swing.JPanel();
        jLabel13 = new javax.swing.JLabel();
        SpinnerLostTurns = new javax.swing.JSpinner();
        PanelTrapPay = new javax.swing.JPanel();
        jLabel14 = new javax.swing.JLabel();
        TextFieldPay = new javax.swing.JTextField();
        PanelTrapChange = new javax.swing.JPanel();
        jLabel15 = new javax.swing.JLabel();
        ComboBoxSectionChange = new javax.swing.JComboBox<>();
        PanelTakeOne = new javax.swing.JPanel();
        jLabel16 = new javax.swing.JLabel();
        ComboBoxGroupTakeOne = new javax.swing.JComboBox<>();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);

        jLabel1.setText("Tipo de Casilla");

        ComboBoxTypeSection.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Inicio", "Neutro", "Trampa", "Propiedad", "Toma una Tarjeta", "Carcel", "Nulo" }));
        ComboBoxTypeSection.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                ComboBoxTypeSectionItemStateChanged(evt);
            }
        });
        ComboBoxTypeSection.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ComboBoxTypeSectionActionPerformed(evt);
            }
        });

        PanelProperty.setToolTipText("");

        jLabel3.setText("Nombre de Propiedad");

        TextFieldName.setToolTipText("");

        TextFieldPrice.setToolTipText("");

        jLabel4.setText("Precio de Propiedad");

        jLabel2.setText("Grupo de Propiedad");

        ComboBoxGroupProperty.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                ComboBoxGroupPropertyItemStateChanged(evt);
            }
        });

        jLabel6.setText("Costo de Estancia");

        jLabel7.setText("Costo de Estancia Aumentado por Casa");

        jLabel8.setText("Costo de Estancia Aumentado por Hotel");

        jLabel9.setText("Precio por Casa");

        jLabel10.setText("Precio por Hotel");

        javax.swing.GroupLayout PanelPlaceLayout = new javax.swing.GroupLayout(PanelPlace);
        PanelPlace.setLayout(PanelPlaceLayout);
        PanelPlaceLayout.setHorizontalGroup(
            PanelPlaceLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(PanelPlaceLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(PanelPlaceLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(PanelPlaceLayout.createSequentialGroup()
                        .addGroup(PanelPlaceLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(jLabel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(ComboBoxGroupProperty, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addGap(18, 18, 18)
                        .addGroup(PanelPlaceLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                            .addComponent(TextFieldStayCost, javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel6, javax.swing.GroupLayout.Alignment.LEADING)))
                    .addGroup(PanelPlaceLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                        .addComponent(TextFieldStayCostHouse, javax.swing.GroupLayout.Alignment.LEADING)
                        .addComponent(jLabel7, javax.swing.GroupLayout.Alignment.LEADING))
                    .addGroup(PanelPlaceLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                        .addComponent(TextFieldStayCostHotel, javax.swing.GroupLayout.Alignment.LEADING)
                        .addComponent(jLabel8, javax.swing.GroupLayout.Alignment.LEADING))
                    .addGroup(PanelPlaceLayout.createSequentialGroup()
                        .addGroup(PanelPlaceLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                            .addComponent(TextFieldPriceHouse, javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel9, javax.swing.GroupLayout.Alignment.LEADING))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(PanelPlaceLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                            .addComponent(TextFieldPriceHotel, javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel10, javax.swing.GroupLayout.Alignment.LEADING))))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        PanelPlaceLayout.setVerticalGroup(
            PanelPlaceLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(PanelPlaceLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(PanelPlaceLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(PanelPlaceLayout.createSequentialGroup()
                        .addComponent(jLabel6)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(TextFieldStayCost, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(PanelPlaceLayout.createSequentialGroup()
                        .addComponent(jLabel2)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(ComboBoxGroupProperty, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel7)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(TextFieldStayCostHouse, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel8)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(TextFieldStayCostHotel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(PanelPlaceLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(PanelPlaceLayout.createSequentialGroup()
                        .addComponent(jLabel9)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(TextFieldPriceHouse, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(PanelPlaceLayout.createSequentialGroup()
                        .addComponent(jLabel10)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(TextFieldPriceHotel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        ComboBoxTypeProperty.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Lugar", "Servicio Basico", "Estacion" }));
        ComboBoxTypeProperty.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                ComboBoxTypePropertyItemStateChanged(evt);
            }
        });

        jLabel5.setText("Tipo de Propiedad");

        jLabel11.setText("Costo");

        javax.swing.GroupLayout PanelServiceStationLayout = new javax.swing.GroupLayout(PanelServiceStation);
        PanelServiceStation.setLayout(PanelServiceStationLayout);
        PanelServiceStationLayout.setHorizontalGroup(
            PanelServiceStationLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(PanelServiceStationLayout.createSequentialGroup()
                .addGroup(PanelServiceStationLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel11)
                    .addComponent(TextFieldCost, javax.swing.GroupLayout.PREFERRED_SIZE, 103, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(0, 0, Short.MAX_VALUE))
        );
        PanelServiceStationLayout.setVerticalGroup(
            PanelServiceStationLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(PanelServiceStationLayout.createSequentialGroup()
                .addComponent(jLabel11)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(TextFieldCost, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 11, Short.MAX_VALUE))
        );

        jButton1.setText("Crear Nuevo Grupo");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout PanelPropertyLayout = new javax.swing.GroupLayout(PanelProperty);
        PanelProperty.setLayout(PanelPropertyLayout);
        PanelPropertyLayout.setHorizontalGroup(
            PanelPropertyLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(PanelPropertyLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(PanelPropertyLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(PanelPropertyLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                        .addComponent(jLabel3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(TextFieldName))
                    .addGroup(PanelPropertyLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                        .addComponent(jLabel4, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(TextFieldPrice, javax.swing.GroupLayout.PREFERRED_SIZE, 152, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(jLabel5)
                    .addGroup(PanelPropertyLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                        .addComponent(PanelServiceStation, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(ComboBoxTypeProperty, javax.swing.GroupLayout.Alignment.LEADING, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                .addGap(18, 18, 18)
                .addComponent(PanelPlace, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jButton1)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        PanelPropertyLayout.setVerticalGroup(
            PanelPropertyLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(PanelPropertyLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(PanelPropertyLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(PanelPropertyLayout.createSequentialGroup()
                        .addComponent(jLabel3)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(TextFieldName, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jLabel4)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(TextFieldPrice, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(22, 22, 22)
                        .addComponent(jLabel5)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(ComboBoxTypeProperty, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(PanelServiceStation, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(PanelPropertyLayout.createSequentialGroup()
                        .addGroup(PanelPropertyLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jButton1, javax.swing.GroupLayout.PREFERRED_SIZE, 53, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(PanelPlace, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(0, 0, Short.MAX_VALUE))))
        );

        ButtonConfirm.setText("Confirmar");
        ButtonConfirm.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ButtonConfirmActionPerformed(evt);
            }
        });

        jLabel12.setText("Tipo de Trampa");

        ComboBoxTypeTramp.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Pagar Multa", "Cambiar Casilla", "Perder Turno" }));
        ComboBoxTypeTramp.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                ComboBoxTypeTrampItemStateChanged(evt);
            }
        });

        jLabel13.setText("Turnos a Perder");

        javax.swing.GroupLayout PanelTrapTurnsLayout = new javax.swing.GroupLayout(PanelTrapTurns);
        PanelTrapTurns.setLayout(PanelTrapTurnsLayout);
        PanelTrapTurnsLayout.setHorizontalGroup(
            PanelTrapTurnsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(PanelTrapTurnsLayout.createSequentialGroup()
                .addGroup(PanelTrapTurnsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jLabel13, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(SpinnerLostTurns))
                .addGap(0, 12, Short.MAX_VALUE))
        );
        PanelTrapTurnsLayout.setVerticalGroup(
            PanelTrapTurnsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(PanelTrapTurnsLayout.createSequentialGroup()
                .addComponent(jLabel13)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(SpinnerLostTurns, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
        );

        jLabel14.setText("Cantidad a Pagar");

        javax.swing.GroupLayout PanelTrapPayLayout = new javax.swing.GroupLayout(PanelTrapPay);
        PanelTrapPay.setLayout(PanelTrapPayLayout);
        PanelTrapPayLayout.setHorizontalGroup(
            PanelTrapPayLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(PanelTrapPayLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(PanelTrapPayLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jLabel14, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(TextFieldPay))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        PanelTrapPayLayout.setVerticalGroup(
            PanelTrapPayLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(PanelTrapPayLayout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jLabel14)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(TextFieldPay, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
        );

        jLabel15.setText("Casilla a cambiar");

        javax.swing.GroupLayout PanelTrapChangeLayout = new javax.swing.GroupLayout(PanelTrapChange);
        PanelTrapChange.setLayout(PanelTrapChangeLayout);
        PanelTrapChangeLayout.setHorizontalGroup(
            PanelTrapChangeLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(PanelTrapChangeLayout.createSequentialGroup()
                .addGroup(PanelTrapChangeLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jLabel15, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(ComboBoxSectionChange, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addGap(0, 0, Short.MAX_VALUE))
        );
        PanelTrapChangeLayout.setVerticalGroup(
            PanelTrapChangeLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(PanelTrapChangeLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel15)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(ComboBoxSectionChange, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout PanelTrapLayout = new javax.swing.GroupLayout(PanelTrap);
        PanelTrap.setLayout(PanelTrapLayout);
        PanelTrapLayout.setHorizontalGroup(
            PanelTrapLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(PanelTrapLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(PanelTrapLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jLabel12, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(ComboBoxTypeTramp, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(PanelTrapTurns, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(PanelTrapPay, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(PanelTrapChange, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );
        PanelTrapLayout.setVerticalGroup(
            PanelTrapLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(PanelTrapLayout.createSequentialGroup()
                .addComponent(PanelTrapChange, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE))
            .addGroup(PanelTrapLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(PanelTrapLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(PanelTrapLayout.createSequentialGroup()
                        .addComponent(PanelTrapTurns, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addContainerGap())
                    .addGroup(PanelTrapLayout.createSequentialGroup()
                        .addComponent(jLabel12)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(ComboBoxTypeTramp, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, PanelTrapLayout.createSequentialGroup()
                .addComponent(PanelTrapPay, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );

        jLabel16.setText("Grupo de Toma la tarjeta");

        javax.swing.GroupLayout PanelTakeOneLayout = new javax.swing.GroupLayout(PanelTakeOne);
        PanelTakeOne.setLayout(PanelTakeOneLayout);
        PanelTakeOneLayout.setHorizontalGroup(
            PanelTakeOneLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(PanelTakeOneLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(PanelTakeOneLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jLabel16, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(ComboBoxGroupTakeOne, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        PanelTakeOneLayout.setVerticalGroup(
            PanelTakeOneLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(PanelTakeOneLayout.createSequentialGroup()
                .addComponent(jLabel16)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(ComboBoxGroupTakeOne, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 11, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(PanelTrap, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel1)
                            .addComponent(ComboBoxTypeSection, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addComponent(ButtonConfirm, javax.swing.GroupLayout.PREFERRED_SIZE, 186, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(PanelTakeOne, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(PanelProperty, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(31, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabel1)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(ComboBoxTypeSection, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(ButtonConfirm, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(PanelProperty, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(PanelTrap, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(PanelTakeOne, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(37, 37, 37))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void ComboBoxTypeSectionActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ComboBoxTypeSectionActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_ComboBoxTypeSectionActionPerformed

    private void ComboBoxTypeSectionItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_ComboBoxTypeSectionItemStateChanged
        enableComponents(this.PanelProperty,false);
        enableComponents(this.PanelTrap,false);
        enableComponents(this.PanelTakeOne,false);
        String option = (String)this.ComboBoxTypeSection.getSelectedItem();
        if (option.equalsIgnoreCase("Trampa")) {
            enableComponents(this.PanelTrap,true);
            String optionTrap = (String)this.ComboBoxTypeTramp.getSelectedItem();
            typeTrap(optionTrap);
        }else if(option.equalsIgnoreCase("Propiedad")){
            enableComponents(this.PanelProperty,true);
            String optionProperty = (String)this.ComboBoxTypeProperty.getSelectedItem();
            typeProperty(optionProperty);
        }else if(option.equalsIgnoreCase("Toma una Tarjeta")){
            enableComponents(this.PanelTakeOne,true);          
        }else if(option.equalsIgnoreCase("Carcel")){
            enableComponents(this.PanelTrapTurns,true);
        }
    }//GEN-LAST:event_ComboBoxTypeSectionItemStateChanged

    private void ComboBoxTypePropertyItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_ComboBoxTypePropertyItemStateChanged
        String optionProperty = (String)this.ComboBoxTypeProperty.getSelectedItem();
        typeProperty(optionProperty);
    }//GEN-LAST:event_ComboBoxTypePropertyItemStateChanged

    private void ComboBoxTypeTrampItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_ComboBoxTypeTrampItemStateChanged
        String optionTrap = (String)this.ComboBoxTypeTramp.getSelectedItem();
        typeTrap(optionTrap);
    }//GEN-LAST:event_ComboBoxTypeTrampItemStateChanged

    private void ComboBoxGroupPropertyItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_ComboBoxGroupPropertyItemStateChanged
        
    }//GEN-LAST:event_ComboBoxGroupPropertyItemStateChanged

    private void ButtonConfirmActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ButtonConfirmActionPerformed
        boolean sectionCreated = false;
        String optionProperty = (String)this.ComboBoxTypeSection.getSelectedItem();
        Section[][] sectionsCreated = this.board.getSectionsBoard();
        // each if represents a different section
        if (optionProperty.equalsIgnoreCase("Inicio")) {
            boolean onlyOneStart = true;
            for (int i = 0; i < this.board.getQuantityRows(); i++) {
                for (int j = 0; j < this.board.getQuantityColumns(); j++) {
                    try{
                        if (sectionsCreated[i][j] instanceof Start) {                            
                            JOptionPane.showMessageDialog(null, "No Puedes crear mas de una casilla Inicio");
                            onlyOneStart = false;
                            break;
                        }
                    }catch(NullPointerException e){
                    
                    }
                }
                if (onlyOneStart == false) {
                    break;
                }
            }
            if (onlyOneStart == true) {                
                this.sectionsCreate[this.rowPosition][this.columnPosition] = new Start(this.rowPosition,this.columnPosition);
                sectionCreated = true;
            }
        }else if(optionProperty.equalsIgnoreCase("Neutro")){
            this.sectionsCreate[this.rowPosition][this.columnPosition] = new Neutro(this.rowPosition,this.columnPosition);            
            sectionCreated = true;
        }else if(optionProperty.equalsIgnoreCase("Trampa")){
            sectionCreated = isFullTrampCreate(sectionCreated);
        }else if(optionProperty.equalsIgnoreCase("Propiedad")){
            sectionCreated = isFullPropertyCreate(sectionCreated);
        }else if(optionProperty.equalsIgnoreCase("Toma una Tarjeta")){
            String groupOption = (String)this.ComboBoxGroupTakeOne.getSelectedItem();
            for (int i = 0; i < this.board.getGroupsCards().length; i++) {
                if (groupOption.equalsIgnoreCase("Grupo No. "+(i+1))) {
                    this.sectionsCreate[this.rowPosition][this.columnPosition] = new TakeOne(this.groupCards[i],this.rowPosition,this.columnPosition);
                    sectionCreated = true;
                    break;
                }
            }
        }else if(optionProperty.equalsIgnoreCase("Carcel")){
            int quantityTurns = (int)this.SpinnerLostTurns.getValue();
            this.sectionsCreate[this.rowPosition][this.columnPosition] = new Jail(this.rowPosition,this.columnPosition, quantityTurns);
            sectionCreated = true;
        }else if(optionProperty.equalsIgnoreCase("Nulo")){
            this.sectionsCreate[this.rowPosition][this.columnPosition] = null;
            sectionCreated = true;
        }
        if (sectionCreated == true) {
            JOptionPane.showMessageDialog(null, "Casilla Creada con Exito");
            createboard.addItemPanelTable(optionProperty,this.rowPosition,this.columnPosition);
            this.dispose();            
        }else{
            JOptionPane.showMessageDialog(null, "Error al Crear la Casilla");
        }
    }//GEN-LAST:event_ButtonConfirmActionPerformed

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        String newGroup = JOptionPane.showInputDialog("Escribe el nombre del grupo");
        boolean readyCreate = true;
        String[][] groups = this.game.getGroupsProperty();
        for (int i = 0; i < groups.length; i++) {
            if (groups[i][0].equals(newGroup)) {
                readyCreate = false;
            }            
        }
        if (readyCreate == true) {
            this.game.setNewGroupProperty(newGroup);
            showGroupsProperty();
        }else{
            JOptionPane.showMessageDialog(null, "No puedes crear grupos con nombres iguales");
        }
    }//GEN-LAST:event_jButton1ActionPerformed
    
    /**
     * This method is used to show the groups
     * of property.
     * 
     */
    public void showGroupsProperty(){
        this.ComboBoxGroupProperty.removeAllItems();
        String[][] groups = this.game.getGroupsProperty();
        for (int i = 0; i < groups.length; i++) {
            this.ComboBoxGroupProperty.addItem(groups[i][0]);            
        }
    }
    /**
     * This method is used to set a place in a group.
     * 
     * @param name
     */
    public void setInGroupProperty(String name){
        this.game.addPlaceToGroup(name);
    }
    
    private void typeProperty(String option){
        if (option.equalsIgnoreCase("Lugar")) {
            enableComponents(this.PanelPlace,true);
            enableComponents(this.PanelServiceStation,false); 
        }else{
            enableComponents(this.PanelPlace,false);
            enableComponents(this.PanelServiceStation,true); 
        }  
    }
    
    private void typeTrap(String option){
        enableComponents(this.PanelTrapPay,false);
        enableComponents(this.PanelTrapTurns,false);
        enableComponents(this.PanelTrapChange,false);
        if (option.equalsIgnoreCase("Pagar Multa")) {
            enableComponents(this.PanelTrapPay,true);
        }else if (option.equalsIgnoreCase("Cambiar Casilla")) {
            enableComponents(this.PanelTrapChange,true);
        }else if (option.equalsIgnoreCase("Perder Turno")) {
            enableComponents(this.PanelTrapTurns,true);
        }
    }
    
    /**
     * This method is used to set enable
     * the components of the containner
     * 
     * @param container
     * @param enable
     */
    public void enableComponents(Container container, boolean enable) {
        Component[] components = container.getComponents();
        for (Component component : components) {
            component.setEnabled(enable);
            if (component instanceof Container) {
                enableComponents((Container)component, enable);
            }
        }
    }
    
    public void showGroupsOfCards(){
        for (int i = 0; i < this.board.getGroupsCards().length; i++) {            
            this.ComboBoxGroupTakeOne.addItem("Grupo No. "+(i+1));
        }
    }
    
    public void showSectionChange(){
        for(int i = 0; i<this.board.getQuantityRows(); i++){
            for (int j = 0; j < this.board.getQuantityColumns(); j++) {
                try{
                    Section sectiontemp = this.board.getSectionsBoard()[i][j];
                    this.ComboBoxSectionChange.addItem("Casilla en: "+sectiontemp.getRowposition()+"," +sectiontemp.getColumnPosition());
                }catch(NullPointerException e ){
                    
                }
            }                
        }
    }
    
    /**
     * This method is used to review if
     * the textfields of the section Trap
     * are full.
     */
    private boolean isFullTrampCreate(boolean sectionCreated){
        String optionTramp = (String)this.ComboBoxTypeTramp.getSelectedItem();
        if (optionTramp.equalsIgnoreCase("Pagar Multa")) {
            double quantity = -1;
            try{
                quantity = Integer.parseInt(this.TextFieldPay.getText());
            }catch(NumberFormatException e){
                //Lanzar Error
            }
            if (quantity > 0) {
                this.sectionsCreate[this.rowPosition][this.columnPosition] = new Trap(1,-1,quantity,null,this.rowPosition,this.columnPosition);
                sectionCreated = true;
            }
        }else if (optionTramp.equalsIgnoreCase("Cambiar Casilla")) {
            String optionSection = (String)this.ComboBoxSectionChange.getSelectedItem();
            if (optionSection.isEmpty()) {
                sectionCreated = false;                
            }else{               
                optionSection = optionSection.replaceAll("Casilla en: ", "");                
                String[] coordinates = optionSection.split(",", 2);
                this.sectionsCreate[this.rowPosition][this.columnPosition] = new Trap(2,-1,-1,this.sectionsCreate[Integer.parseInt(coordinates[0])][Integer.parseInt(coordinates[1])],this.rowPosition,this.columnPosition);
                sectionCreated = true;
            }
        }else if (optionTramp.equalsIgnoreCase("Perder Turno")) {
            int turns = 0;
            try{
                turns = (int)(this.SpinnerLostTurns.getValue());
            }catch(NumberFormatException e){
                //Lanzar Error
            }
            if (turns > 0) {
                this.sectionsCreate[this.rowPosition][this.columnPosition] = new Trap(3,turns,-1,null,this.rowPosition,this.columnPosition);
                sectionCreated = true;
            }
        }
        return sectionCreated;
    }
    
    /**
     * This method is used to review if
     * the textfields of the section Property
     * are full.
     */
    private boolean isFullPropertyCreate(boolean sectionCreated){
        String optionProperty = (String)this.ComboBoxTypeProperty.getSelectedItem();
        
        if (this.TextFieldName.getText().isEmpty()) {
            //Error
        }else if(this.TextFieldName.getText().isEmpty()){
            //Error
        }else{
            String propertyName = this.TextFieldName.getText();
            double propertyPrice = Double.parseDouble(this.TextFieldPrice.getText());
            String optionGroup = (String)(this.ComboBoxGroupProperty.getSelectedItem());
            if (optionProperty.equalsIgnoreCase("Lugar")) {
                if (this.TextFieldStayCost.getText().isEmpty()) {
                    //Error
                }else if(this.TextFieldStayCostHouse.getText().isEmpty()){
                    //Error
                }else if(this.TextFieldStayCostHotel.getText().isEmpty()){
                    //Error
                }else if(this.TextFieldPriceHouse.getText().isEmpty()){
                    //Error
                }else if(this.TextFieldPriceHotel.getText().isEmpty()){
                    //Error
                }else if (optionGroup.isEmpty()){
                    //Error
                }else{
                    try{
                        double stayCost = Double.parseDouble(this.TextFieldStayCost.getText());
                        double stayCostHouse = Double.parseDouble(this.TextFieldStayCostHouse.getText());
                        double stayCostHotel = Double.parseDouble(this.TextFieldStayCostHotel.getText());
                        double priceHouse = Double.parseDouble(this.TextFieldPriceHouse.getText());
                        double priceHotel = Double.parseDouble(this.TextFieldPriceHotel.getText());
                        double percentageMortgage = this.game.getPercentageMortgage();
                        this.sectionsCreate[this.rowPosition][this.columnPosition] =new Place(0,0,stayCost,stayCostHouse,stayCostHotel,priceHouse,priceHotel,optionGroup,propertyName,null,propertyPrice,percentageMortgage,false,this.rowPosition,this.columnPosition);
                        sectionCreated = true;
                        setInGroupProperty(optionGroup);                                                
                    }catch(Exception e){
                        
                    }                    
                }
            }else if(optionProperty.equalsIgnoreCase("Servicio Basico") || optionProperty.equalsIgnoreCase("Estacion")){
                double quantity = -1;
                try{
                    quantity = Integer.parseInt(this.TextFieldCost.getText());
                }catch(NumberFormatException e){
                //Lanzar Error
                }
                if (quantity > 0) {
                    if (optionProperty.equalsIgnoreCase("Servicio Basico")) {
                        //Crear Servicio Basico
                        this.sectionsCreate[this.rowPosition][this.columnPosition] = new BasicService(quantity,propertyName,null,propertyPrice,0.1,false,this.rowPosition,this.columnPosition);
                        sectionCreated = true;
                    }else if(optionProperty.equalsIgnoreCase("Estacion")){
                        this.sectionsCreate[this.rowPosition][this.columnPosition] = new Station(quantity,propertyName,null,propertyPrice,0.1,false,this.rowPosition,this.columnPosition);
                        sectionCreated = true;
                    }
                }
            }
        }        
        return sectionCreated;
    }
    
    /**
     * This method is used to show the atributes of the section
     * if the section are edited.
     */
    public void showSectionCreated(Section section){        
        if (section != null) {
            if (section instanceof Jail) {
                this.ComboBoxTypeSection.setSelectedItem("Carcel");
                this.SpinnerLostTurns.setValue(((Jail) section).getQuantityTurns());
            }else if (section instanceof Property) {
                this.ComboBoxTypeSection.setSelectedItem("Propiedad");
                this.TextFieldName.setText(((Property) section).getName());
                this.TextFieldPrice.setText(String.valueOf(((Property) section).getPurchasePrice()));
                if (section instanceof Place) {
                    this.ComboBoxTypeProperty.setSelectedItem("Lugar");
                    this.TextFieldStayCost.setText(String.valueOf(((Place) section).getStayCost()));
                    this.TextFieldStayCostHouse.setText(String.valueOf(((Place) section).getStayCostPerHouse()));
                    this.TextFieldStayCostHotel.setText(String.valueOf(((Place) section).getStayCostPerHotel()));
                    this.TextFieldPriceHouse.setText(String.valueOf(((Place) section).getPriceHouse()));
                    this.TextFieldPriceHotel.setText(String.valueOf(((Place) section).getPriceHotel()));                    
                }else if(section instanceof BasicService){
                    this.ComboBoxTypeProperty.setSelectedItem("Servicio Basico");
                    this.TextFieldCost.setText(String.valueOf(((BasicService) section).getServiceCost()));
                }else if(section instanceof Station){
                    this.ComboBoxTypeProperty.setSelectedItem("Estacion");
                    this.TextFieldCost.setText(String.valueOf(((Station) section).getUsageCost()));
                }          
            }else if (section instanceof TakeOne) {
                this.ComboBoxTypeSection.setSelectedItem("Toma una Tarjeta");
                //pendiente
            }else if (section instanceof Trap) {
                this.ComboBoxTypeSection.setSelectedItem("Trampa");
                int type = ((Trap) section).getTypeTrap();
                if (type == 1) {                    
                    this.ComboBoxTypeTramp.setSelectedItem("Pagar Multa");
                    this.TextFieldPay.setText(String.valueOf(((Trap) section).getQuantityPay()));
                }else if(type == 2){
                    this.ComboBoxTypeTramp.setSelectedItem("Cambiar Casilla");
                    
                }else if(type == 3){
                    this.ComboBoxTypeTramp.setSelectedItem("Perder Turno");
                    this.SpinnerLostTurns.setValue(((Trap) section).getQuantityTurns());
                }
            }else if(section instanceof Start){
                this.ComboBoxTypeSection.setSelectedItem("Inicio");
            }        
        }
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton ButtonConfirm;
    private javax.swing.JComboBox<String> ComboBoxGroupProperty;
    private javax.swing.JComboBox<String> ComboBoxGroupTakeOne;
    private javax.swing.JComboBox<String> ComboBoxSectionChange;
    private javax.swing.JComboBox<String> ComboBoxTypeProperty;
    private javax.swing.JComboBox<String> ComboBoxTypeSection;
    private javax.swing.JComboBox<String> ComboBoxTypeTramp;
    private javax.swing.JPanel PanelPlace;
    private javax.swing.JPanel PanelProperty;
    private javax.swing.JPanel PanelServiceStation;
    private javax.swing.JPanel PanelTakeOne;
    private javax.swing.JPanel PanelTrap;
    private javax.swing.JPanel PanelTrapChange;
    private javax.swing.JPanel PanelTrapPay;
    private javax.swing.JPanel PanelTrapTurns;
    private javax.swing.JSpinner SpinnerLostTurns;
    private javax.swing.JTextField TextFieldCost;
    private javax.swing.JTextField TextFieldName;
    private javax.swing.JTextField TextFieldPay;
    private javax.swing.JTextField TextFieldPrice;
    private javax.swing.JTextField TextFieldPriceHotel;
    private javax.swing.JTextField TextFieldPriceHouse;
    private javax.swing.JTextField TextFieldStayCost;
    private javax.swing.JTextField TextFieldStayCostHotel;
    private javax.swing.JTextField TextFieldStayCostHouse;
    private javax.swing.JButton jButton1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JLabel jLabel14;
    private javax.swing.JLabel jLabel15;
    private javax.swing.JLabel jLabel16;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    // End of variables declaration//GEN-END:variables
}
